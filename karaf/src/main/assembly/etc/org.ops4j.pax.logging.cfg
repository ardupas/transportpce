################################################################################
#
#    Licensed to the Apache Software Foundation (ASF) under one or more
#    contributor license agreements.  See the NOTICE file distributed with
#    this work for additional information regarding copyright ownership.
#    The ASF licenses this file to You under the Apache License, Version 2.0
#    (the "License"); you may not use this file except in compliance with
#    the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
################################################################################

# Root logger
log4j.rootLogger=INFO, async, osgi:*
log4j.throwableRenderer=org.apache.log4j.OsgiThrowableRenderer

# CONSOLE appender not used by default
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n

# Async appender forwarding to file appender
log4j.appender.async=org.apache.log4j.AsyncAppender
log4j.appender.async.appenders=out

# TPCE appender will log messages from org.opendaylight.transportpce package
log4j.logger.org.opendaylight.transportpce=INFO, tpce

# TPCE appender will log messages from org.opendaylight.transportpce package
log4j.logger.org.opendaylight.transportpce.networkmodel.listeners.AlarmNotificationListener=WARN, tpcealarm

# TPCE appender will log messages from org.opendaylight.transportpce.networkmodel.listeners.AlarmNotificationListener class only for suppress list
log4j.logger.org.opendaylight.transportpce.networkmodel.listeners.AlarmNotificationListener=INFO, tpcesuppressalarm

# File appender
log4j.appender.out=org.apache.log4j.RollingFileAppender
log4j.appender.out.layout=org.apache.log4j.PatternLayout
log4j.appender.out.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n
log4j.appender.out.file=${karaf.data}/log/karaf.log
log4j.appender.out.append=true
log4j.appender.out.maxFileSize=1MB
log4j.appender.out.maxBackupIndex=10

# Sift appender
log4j.appender.sift=org.apache.log4j.sift.MDCSiftingAppender
log4j.appender.sift.key=bundle.name
log4j.appender.sift.default=karaf
log4j.appender.sift.appender=org.apache.log4j.FileAppender
log4j.appender.sift.appender.layout=org.apache.log4j.PatternLayout
log4j.appender.sift.appender.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %m%n
log4j.appender.sift.appender.file=${karaf.data}/log/$\\{bundle.name\\}.log
log4j.appender.sift.appender.append=true

# syslog appender for exporting karaf messages to a syslog server
# To enable the syslog appender, add it to the log4j.rootLogger list above.
#
# Make sure to set log4j.appender.syslog.syslogHost in the format:
# <syslogHost>:<syslogPort>
# If no port is specified, the default, 514, is assumed.
log4j.appender.syslog=org.apache.log4j.net.SyslogAppender
log4j.appender.syslog.layout=org.apache.log4j.PatternLayout
log4j.appender.syslog.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n
log4j.appender.syslog.syslogHost=127.0.0.1
log4J.appender.syslog.facility=KARAF
log4j.appender.syslog.facilityPrinting=false

# TransportPCE logger
# This logger will create file transport-pce.log under data/log with max size of 10MB
# to be used with org.opendaylight.transportpce package
log4j.appender.tpce=org.apache.log4j.RollingFileAppender
log4j.appender.tpce.layout=org.apache.log4j.PatternLayout
log4j.appender.tpce.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n
log4j.appender.tpce.file=${karaf.data}/log/transport-pce.log
log4j.appender.tpce.append=true
log4j.appender.tpce.maxFileSize=10MB
log4j.appender.tpce.maxBackupIndex=10

# TransportPCE logger
# This logger will create file transport-pce.log under data/log with max size of 10MB
# to be used with org.opendaylight.transportpce package
log4j.appender.tpcealarm=org.apache.log4j.RollingFileAppender
log4j.appender.tpcealarm.layout=org.apache.log4j.PatternLayout
log4j.appender.tpcealarm.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n
log4j.appender.tpcealarm.file=${karaf.data}/log/transport-pce-alarm.log
log4j.appender.tpcealarm.append=true
log4j.appender.tpcealarm.maxFileSize=10MB
log4j.appender.tpcealarm.maxBackupIndex=10

# TransportPCE logger
# This logger will create file transport-pce.log under data/log with max size of 10MB
# to be used with org.opendaylight.transportpce package
log4j.appender.tpcesuppressalarm=org.apache.log4j.RollingFileAppender
log4j.appender.tpcesuppressalarm.layout=org.apache.log4j.PatternLayout
log4j.appender.tpcesuppressalarm.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n
log4j.appender.tpcesuppressalarm.file=${karaf.data}/log/transport-pce-suppress-alarm.log
log4j.appender.tpcesuppressalarm.append=true
log4j.appender.tpcesuppressalarm.maxFileSize=10MB
log4j.appender.tpcesuppressalarm.maxBackupIndex=10
